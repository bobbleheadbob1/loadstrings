local HEAD_SIZE = 3
local HEAD_SIZE_INCREMENT = 0.5
local isBigHeadsEnabled = false

local function resizeHead(player)
    local character = player.Character
    if character then
        local head = character:FindFirstChild("Head")
        if head then
            local newSize = HEAD_SIZE + HEAD_SIZE_INCREMENT
            if isBigHeadsEnabled and player ~= game.Players.LocalPlayer then
                head.Size = Vector3.new(newSize, newSize, newSize)
                head.Transparency = 0.5
                head.CanCollide = false
            else
                head.Size = Vector3.new(1, 1, 1)
                head.Transparency = 0
                head.CanCollide = true
            end
        end
    end
end

local function runBigHeadsScript()
    isBigHeadsEnabled = not isBigHeadsEnabled
    for _, player in ipairs(game.Players:GetPlayers()) do
        resizeHead(player)
    end
end

game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.H then
        if input.UserInputState == Enum.UserInputState.Begin then
            runBigHeadsScript()
        end
    elseif input.KeyCode == Enum.KeyCode.Minus then
        HEAD_SIZE = math.max(1, HEAD_SIZE - HEAD_SIZE_INCREMENT)
        for _, player in ipairs(game.Players:GetPlayers()) do
            resizeHead(player)
        end
    elseif input.KeyCode == Enum.KeyCode.Equals then
        HEAD_SIZE = HEAD_SIZE + HEAD_SIZE_INCREMENT
        for _, player in ipairs(game.Players:GetPlayers()) do
            resizeHead(player)
        end
    end
end)